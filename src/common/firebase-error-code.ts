export enum FirebaseAuthError {
    'auth/claims-too-large' = 'The claims payload provided to setCustomUserClaims() exceeds the maximum allowed size of 1,000 bytes.',
    'auth/email-already-exists' = 'The email address is already in use by another account.',
    'auth/id-token-expired' = 'The provided Firebase ID token is expired.',
    'auth/id-token-revoked' = 'The Firebase ID token has been revoked.',
    'auth/insufficient-permission' = 'The credential used to authenticate this SDK does not have permission to access the requested resource.',
    'auth/internal-error' = 'An internal error has occurred.',
    'auth/invalid-argument' = 'An invalid argument was provided.',
    'auth/invalid-claims' = 'The custom claims provided to setCustomUserClaims() are invalid.',
    'auth/invalid-continue-uri' = 'The continue URL provided in the request is invalid.',
    'auth/invalid-creation-time' = 'The creation time must be a valid UTC date string.',
    'auth/invalid-credential' = 'The credential format is invalid or has expired.',
    'auth/invalid-disabled-field' = 'The value provided for the disabled user property is invalid.',
    'auth/invalid-display-name' = 'The display name provided is invalid.',
    'auth/invalid-dynamic-link-domain' = 'The provided dynamic link domain is not configured or authorized for the project.',
    'auth/invalid-email' = 'The email address is not valid.',
    'auth/invalid-email-verified' = 'The email verified property must be a boolean.',
    'auth/invalid-hash-algorithm' = 'The hash algorithm must be one of the supported algorithms.',
    'auth/invalid-hash-block-size' = 'The hash block size must be a valid number.',
    'auth/invalid-hash-derived-key-length' = 'The derived key length must be a valid number.',
    'auth/invalid-hash-key' = 'The hash key must be a valid byte buffer.',
    'auth/invalid-hash-memory-cost' = 'The memory cost must be a valid number.',
    'auth/invalid-hash-parallelization' = 'The parallelization must be a valid number.',
    'auth/invalid-hash-rounds' = 'The rounds must be a valid number.',
    'auth/invalid-hash-salt-separator' = 'The salt separator must be a valid byte buffer.',
    'auth/invalid-id-token' = 'The provided ID token is not valid.',
    'auth/invalid-last-sign-in-time' = 'The last sign-in time must be a valid UTC date string.',
    'auth/invalid-page-token' = 'The page token must be a valid string.',
    'auth/invalid-password' = 'The provided password is invalid, it must be a string with at least six characters.',
    'auth/invalid-password-hash' = 'The password hash must be a valid byte buffer.',
    'auth/invalid-password-salt' = 'The password salt must be a valid byte buffer.',
    'auth/invalid-phone-number' = 'The provided phone number is invalid.',
    'auth/invalid-photo-url' = 'The provided photo URL is invalid.',
    'auth/invalid-provider-data' = 'The provider data must be a valid array of UserInfo objects.',
    'auth/invalid-provider-id' = 'The provider ID must be a valid supported provider identifier string.',
    'auth/invalid-session-cookie-duration' = 'The session cookie duration must be a valid number in milliseconds.',
    'auth/invalid-uid' = 'The provided UID must be a non-empty string with at most 128 characters.',
    'auth/invalid-user-import' = 'The user import failed.',
    'auth/maximum-user-count-exceeded' = 'The maximum allowed number of users has been exceeded.',
    'auth/missing-android-pkg-name' = 'An Android Package Name must be provided if the Android App is required.',
    'auth/missing-continue-uri' = 'A valid continue URL must be provided in the request.',
    'auth/missing-hash-algorithm' = 'The hash algorithm must be provided.',
    'auth/missing-ios-bundle-id' = 'An iOS Bundle ID must be provided if the iOS App is required.',
    'auth/missing-uid' = 'A UID identifier is required for the current operation.',
    'auth/phone-number-already-exists' = 'The phone number is already in use by another account.',
    'auth/project-not-found' = 'No project was found for the provided identifier.',
    'auth/reserved-claims' = 'The custom claim provided to setCustomUserClaims() contains a reserved claim.',
    'auth/session-cookie-expired' = 'The provided Firebase session cookie is expired.',
    'auth/session-cookie-revoked' = 'The Firebase session cookie has been revoked.',
    'auth/uid-already-exists' = 'The provided UID is already in use by an existing user.',
    'auth/unauthorized-continue-uri' = 'The domain of the continue URL is not whitelisted.',
    'auth/user-not-found' = 'No user record found for the provided identifier.',
    'auth/app-deleted' = 'The Firebase app has been deleted.',
    'auth/app-not-authorized' = 'The app is not authorized to use Firebase Authentication.',
    'auth/argument-error' = 'An invalid argument was provided.',
    'auth/invalid-api-key' = 'The API key is invalid or restricted.',
    'auth/invalid-user-token' = 'The user token is invalid.',
    'auth/invalid-tenant-id' = 'The tenant ID is invalid.',
    'auth/network-request-failed' = 'The network request failed.',
    'auth/operation-not-allowed' = 'The operation is not allowed.',
    'auth/requires-recent-login' = 'This operation is sensitive and requires recent authentication.',
    'auth/too-many-requests' = 'Too many requests have been made to the API.',
    'auth/unauthorized-domain' = 'The domain of the continue URL is not authorized.',
    'auth/user-disabled' = 'The user account has been disabled by an administrator.',
    'auth/user-token-expired' = 'The user token has expired.',
    'auth/web-storage-unsupported' = 'The web storage is unsupported in this browser.'
}  

export const convertFirebaseAuthEnumMessage = (code: string) => {
    if (code in FirebaseAuthError) {
        return FirebaseAuthError[code as keyof typeof FirebaseAuthError];
    }
    return 'Unknown error code';
}