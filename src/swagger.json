{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IResponse_any_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{},
							{
								"items": {},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CreateVisitorDto": {
				"properties": {
					"visitorName": {
						"type": "string"
					},
					"visitorCategory": {
						"type": "string"
					},
					"visitorContactNumber": {
						"type": "string"
					},
					"visitDateTime": {
						"type": "string"
					}
				},
				"required": [
					"visitorName",
					"visitorCategory",
					"visitorContactNumber",
					"visitDateTime"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DocumentStatus": {
				"enum": [
					1,
					0,
					-1,
					2,
					3,
					4
				],
				"type": "number"
			},
			"GetVisitorDto": {
				"properties": {
					"visitorId": {
						"type": "number",
						"format": "double"
					},
					"visitorGuid": {
						"type": "string"
					},
					"visitorName": {
						"type": "string"
					},
					"visitorCategory": {
						"type": "string"
					},
					"visitorContactNumber": {
						"type": "string"
					},
					"visitDateTime": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/DocumentStatus"
					},
					"createdBy": {
						"type": "string"
					},
					"updatedBy": {
						"type": "string"
					},
					"createdDateTime": {
						"type": "string"
					},
					"updatedDateTime": {
						"type": "string"
					}
				},
				"required": [
					"visitorId",
					"visitorGuid",
					"visitorName",
					"visitorCategory",
					"visitorContactNumber",
					"visitDateTime",
					"status",
					"createdBy",
					"updatedBy",
					"createdDateTime",
					"updatedDateTime"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPaginatedResponse_GetVisitorDto_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"data": {
						"properties": {
							"count": {
								"type": "number",
								"format": "double"
							},
							"list": {
								"items": {
									"$ref": "#/components/schemas/GetVisitorDto"
								},
								"type": "array",
								"nullable": true
							}
						},
						"required": [
							"count",
							"list"
						],
						"type": "object"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_GetVisitorDto-Array_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/GetVisitorDto"
								},
								"type": "array"
							},
							{
								"items": {
									"items": {
										"$ref": "#/components/schemas/GetVisitorDto"
									},
									"type": "array"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_GetVisitorDto_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/GetVisitorDto"
							},
							{
								"items": {
									"$ref": "#/components/schemas/GetVisitorDto"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PaginationDirection.Next": {
				"enum": [
					"next"
				],
				"type": "string"
			},
			"PaginationDirection.Previous": {
				"enum": [
					"prev"
				],
				"type": "string"
			},
			"GetVisitorByDateDto": {
				"properties": {
					"date": {
						"type": "string"
					},
					"count": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"date",
					"count"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_GetVisitorByDateDto_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/GetVisitorByDateDto"
							},
							{
								"items": {
									"$ref": "#/components/schemas/GetVisitorByDateDto"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_GetVisitorByDateDto-Array_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/GetVisitorByDateDto"
								},
								"type": "array"
							},
							{
								"items": {
									"items": {
										"$ref": "#/components/schemas/GetVisitorByDateDto"
									},
									"type": "array"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EditVisitorByIdDto": {
				"properties": {
					"visitorName": {
						"type": "string"
					},
					"visitorCategory": {
						"type": "string"
					},
					"visitorContactNumber": {
						"type": "string"
					},
					"visitDateTime": {
						"type": "string"
					}
				},
				"required": [
					"visitorName",
					"visitorCategory",
					"visitorContactNumber",
					"visitDateTime"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RoleEnum": {
				"enum": [
					"SA",
					"STF",
					"RES",
					"SUB"
				],
				"type": "string"
			},
			"GetUserDto": {
				"properties": {
					"userId": {
						"type": "number",
						"format": "double"
					},
					"userGuid": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"contactNumber": {
						"type": "string"
					},
					"gender": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/RoleEnum"
					},
					"dateOfBirth": {
						"type": "string"
					},
					"createdBy": {
						"type": "string"
					},
					"createdDateTime": {
						"type": "string"
					},
					"updatedBy": {
						"type": "string"
					},
					"updatedDateTime": {
						"type": "string"
					}
				},
				"required": [
					"userId",
					"userGuid",
					"firstName",
					"lastName",
					"userName",
					"contactNumber",
					"gender",
					"role",
					"dateOfBirth",
					"createdBy",
					"createdDateTime",
					"updatedBy",
					"updatedDateTime"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPaginatedResponse_GetUserDto_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"data": {
						"properties": {
							"count": {
								"type": "number",
								"format": "double"
							},
							"list": {
								"items": {
									"$ref": "#/components/schemas/GetUserDto"
								},
								"type": "array",
								"nullable": true
							}
						},
						"required": [
							"count",
							"list"
						],
						"type": "object"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_GetUserDto-Array_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/GetUserDto"
								},
								"type": "array"
							},
							{
								"items": {
									"items": {
										"$ref": "#/components/schemas/GetUserDto"
									},
									"type": "array"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ResidentInformationDto": {
				"properties": {
					"floorNumber": {
						"type": "string"
					},
					"unitNumber": {
						"type": "string"
					},
					"supportedFiles": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"floorNumber",
					"unitNumber",
					"supportedFiles"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SystemInformationDto": {
				"properties": {
					"staffId": {
						"type": "string"
					},
					"supportedFiles": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"staffId",
					"supportedFiles"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetUserDetailsByIdDto": {
				"properties": {
					"userId": {
						"type": "number",
						"format": "double"
					},
					"userGuid": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"contactNumber": {
						"type": "string"
					},
					"gender": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/RoleEnum"
					},
					"roleInformation": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ResidentInformationDto"
							},
							{
								"$ref": "#/components/schemas/SystemInformationDto"
							}
						]
					},
					"dateOfBirth": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"createdBy": {
						"type": "string"
					},
					"createdDateTime": {
						"type": "string"
					},
					"updatedBy": {
						"type": "string"
					},
					"updatedDateTime": {
						"type": "string"
					}
				},
				"required": [
					"userId",
					"userGuid",
					"firstName",
					"lastName",
					"userName",
					"email",
					"contactNumber",
					"gender",
					"role",
					"dateOfBirth",
					"createdBy",
					"createdDateTime",
					"updatedBy",
					"updatedDateTime"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_GetUserDetailsByIdDto_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/GetUserDetailsByIdDto"
							},
							{
								"items": {
									"$ref": "#/components/schemas/GetUserDetailsByIdDto"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EditUserDetailsByIdDto": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"contactNumber": {
						"type": "string"
					},
					"gender": {
						"type": "string"
					},
					"dateOfBirth": {
						"type": "string"
					}
				},
				"required": [
					"firstName",
					"lastName",
					"userName",
					"email",
					"contactNumber",
					"gender",
					"dateOfBirth"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateSubUserRequestDto": {
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetSubUserByResidentDto": {
				"properties": {
					"userId": {
						"type": "number",
						"format": "double"
					},
					"userGuid": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"contactNumber": {
						"type": "string"
					},
					"gender": {
						"type": "string"
					},
					"dateOfBirth": {
						"type": "string"
					},
					"status": {
						"type": "boolean"
					}
				},
				"required": [
					"userId",
					"userGuid",
					"firstName",
					"lastName",
					"userName",
					"contactNumber",
					"gender",
					"dateOfBirth",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPaginatedResponse_GetSubUserByResidentDto_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"data": {
						"properties": {
							"count": {
								"type": "number",
								"format": "double"
							},
							"list": {
								"items": {
									"$ref": "#/components/schemas/GetSubUserByResidentDto"
								},
								"type": "array",
								"nullable": true
							}
						},
						"required": [
							"count",
							"list"
						],
						"type": "object"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DeleteSubUserByIdDto": {
				"properties": {
					"subUserGuid": {
						"type": "string"
					}
				},
				"required": [
					"subUserGuid"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetPropertyListDto": {
				"properties": {
					"floorId": {
						"type": "string"
					},
					"units": {
						"items": {
							"properties": {
								"assignedTo": {
									"type": "string",
									"nullable": true
								},
								"isAssigned": {
									"type": "boolean"
								},
								"unitId": {
									"type": "string"
								}
							},
							"required": [
								"assignedTo",
								"isAssigned"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"floorId",
					"units"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_GetPropertyListDto-Array_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/GetPropertyListDto"
								},
								"type": "array"
							},
							{
								"items": {
									"items": {
										"$ref": "#/components/schemas/GetPropertyListDto"
									},
									"type": "array"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CreateParcelDto": {
				"properties": {
					"parcelImage": {
						"type": "string"
					},
					"floor": {
						"type": "string"
					},
					"unit": {
						"type": "string"
					}
				},
				"required": [
					"parcelImage",
					"floor",
					"unit"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateNoticeDto": {
				"properties": {
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"startDate": {
						"type": "string"
					},
					"endDate": {
						"type": "string"
					}
				},
				"required": [
					"title",
					"description",
					"startDate",
					"endDate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetNoticeDto": {
				"properties": {
					"noticeId": {
						"type": "number",
						"format": "double"
					},
					"noticeGuid": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"startDate": {
						"type": "string"
					},
					"endDate": {
						"type": "string"
					},
					"createdBy": {
						"type": "string"
					},
					"createdDateTime": {
						"type": "string"
					},
					"updatedBy": {
						"type": "string"
					},
					"updatedDateTime": {
						"type": "string"
					}
				},
				"required": [
					"noticeId",
					"noticeGuid",
					"title",
					"description",
					"startDate",
					"endDate",
					"createdBy",
					"createdDateTime",
					"updatedBy",
					"updatedDateTime"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPaginatedResponse_GetNoticeDto_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"data": {
						"properties": {
							"count": {
								"type": "number",
								"format": "double"
							},
							"list": {
								"items": {
									"$ref": "#/components/schemas/GetNoticeDto"
								},
								"type": "array",
								"nullable": true
							}
						},
						"required": [
							"count",
							"list"
						],
						"type": "object"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_GetNoticeDto-Array_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/GetNoticeDto"
								},
								"type": "array"
							},
							{
								"items": {
									"items": {
										"$ref": "#/components/schemas/GetNoticeDto"
									},
									"type": "array"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_GetNoticeDto_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/GetNoticeDto"
							},
							{
								"items": {
									"$ref": "#/components/schemas/GetNoticeDto"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EditNoticeDto": {
				"properties": {
					"noticeGuid": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"startDate": {
						"type": "string"
					},
					"endDate": {
						"type": "string"
					}
				},
				"required": [
					"noticeGuid",
					"title",
					"description",
					"startDate",
					"endDate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DeleteNoticeDto": {
				"properties": {
					"noticeGuid": {
						"type": "string"
					}
				},
				"required": [
					"noticeGuid"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateFacilityBookingDto": {
				"properties": {
					"bookedBy": {
						"type": "string"
					},
					"facilityId": {
						"type": "string"
					},
					"startDate": {
						"type": "string"
					},
					"endDate": {
						"type": "string"
					},
					"numOfGuest": {
						"type": "number",
						"format": "double"
					},
					"spaceId": {
						"type": "string"
					}
				},
				"required": [
					"facilityId",
					"startDate",
					"endDate",
					"numOfGuest",
					"spaceId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetFacilityBookingHistoryDto": {
				"properties": {
					"bookingId": {
						"type": "number",
						"format": "double"
					},
					"bookingGuid": {
						"type": "string"
					},
					"startDate": {
						"type": "string"
					},
					"facilityId": {
						"type": "string"
					},
					"facilityName": {
						"type": "string"
					},
					"endDate": {
						"type": "string"
					},
					"bookedBy": {
						"type": "string"
					},
					"numOfGuest": {
						"type": "number",
						"format": "double"
					},
					"isCancelled": {
						"type": "boolean"
					},
					"cancelRemark": {
						"type": "string"
					},
					"createdBy": {
						"type": "string"
					},
					"createdDateTime": {
						"type": "string"
					},
					"updatedBy": {
						"type": "string"
					},
					"updatedDateTime": {
						"type": "string"
					}
				},
				"required": [
					"bookingId",
					"bookingGuid",
					"startDate",
					"facilityId",
					"facilityName",
					"endDate",
					"bookedBy",
					"numOfGuest",
					"isCancelled",
					"cancelRemark",
					"createdBy",
					"createdDateTime",
					"updatedBy",
					"updatedDateTime"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPaginatedResponse_GetFacilityBookingHistoryDto_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"data": {
						"properties": {
							"count": {
								"type": "number",
								"format": "double"
							},
							"list": {
								"items": {
									"$ref": "#/components/schemas/GetFacilityBookingHistoryDto"
								},
								"type": "array",
								"nullable": true
							}
						},
						"required": [
							"count",
							"list"
						],
						"type": "object"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_GetFacilityBookingHistoryDto-Array_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/GetFacilityBookingHistoryDto"
								},
								"type": "array"
							},
							{
								"items": {
									"items": {
										"$ref": "#/components/schemas/GetFacilityBookingHistoryDto"
									},
									"type": "array"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CancelFacilityBookingDto": {
				"properties": {
					"bookingGuid": {
						"type": "string"
					},
					"cancelRemark": {
						"type": "string"
					}
				},
				"required": [
					"bookingGuid"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SpaceAvailabilityDto": {
				"properties": {
					"spaceId": {
						"type": "string"
					},
					"spaceName": {
						"type": "string"
					},
					"isBooked": {
						"type": "boolean"
					},
					"capacity": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"spaceId",
					"spaceName",
					"isBooked",
					"capacity"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_SpaceAvailabilityDto-Array_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/SpaceAvailabilityDto"
								},
								"type": "array"
							},
							{
								"items": {
									"items": {
										"$ref": "#/components/schemas/SpaceAvailabilityDto"
									},
									"type": "array"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CreateUserFaceAuthDto": {
				"properties": {
					"faceData": {
						"type": "string"
					}
				},
				"required": [
					"faceData"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RegisterUserDto": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"confirmPassword": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password",
					"confirmPassword"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginDto": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role": {
						"items": {
							"$ref": "#/components/schemas/RoleEnum"
						},
						"type": "array"
					}
				},
				"required": [
					"email",
					"password",
					"role"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RequestResetPasswordDto": {
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResetPasswordDto": {
				"properties": {
					"currentPassword": {
						"type": "string"
					},
					"newPassword": {
						"type": "string"
					}
				},
				"required": [
					"currentPassword",
					"newPassword"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthTokenPayloadDto": {
				"properties": {
					"userGuid": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/RoleEnum"
					}
				},
				"required": [
					"userGuid",
					"role"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_AuthTokenPayloadDto_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/AuthTokenPayloadDto"
							},
							{
								"items": {
									"$ref": "#/components/schemas/AuthTokenPayloadDto"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SubUserAuthTokenPayloadDto": {
				"properties": {
					"subUserRequestGuid": {
						"type": "string"
					},
					"subUserEmail": {
						"type": "string"
					},
					"parentUserGuid": {
						"type": "string"
					}
				},
				"required": [
					"subUserRequestGuid",
					"subUserEmail",
					"parentUserGuid"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse_SubUserAuthTokenPayloadDto_": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/SubUserAuthTokenPayloadDto"
							},
							{
								"items": {
									"$ref": "#/components/schemas/SubUserAuthTokenPayloadDto"
								},
								"type": "array"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "Secure Guard Pro",
		"version": "1.0.0",
		"description": "Backend API",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/visitor/create": {
			"post": {
				"operationId": "createVisitor",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Visitor"
				],
				"security": [
					{
						"jwt": [
							"RES",
							"SUB",
							"SA"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateVisitorDto"
							}
						}
					}
				}
			}
		},
		"/visitor": {
			"get": {
				"operationId": "getVisitorByResident",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IPaginatedResponse_GetVisitorDto_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetVisitorDto-Array_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Visitor"
				],
				"security": [
					{
						"jwt": [
							"RES",
							"SUB",
							"SA"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "isPast",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/visitor/details": {
			"get": {
				"operationId": "getVisitorDetails",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetVisitorDto_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Visitor"
				],
				"security": [
					{
						"jwt": [
							"RES",
							"SUB",
							"SA"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "visitorGuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/visitor/admin": {
			"get": {
				"operationId": "getAllVisitor",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IPaginatedResponse_GetVisitorDto_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetVisitorDto-Array_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Visitor"
				],
				"security": [
					{
						"jwt": [
							"SA"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "direction",
						"required": true,
						"schema": {}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/visitor/admin/analytics": {
			"get": {
				"operationId": "getVisitorCountsByDay",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetVisitorByDateDto_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetVisitorByDateDto-Array_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Visitor"
				],
				"security": [
					{
						"jwt": [
							"SA"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "startDate",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endDate",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/visitor/edit": {
			"put": {
				"operationId": "editVisitorById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Visitor"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "visitorGuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EditVisitorByIdDto"
							}
						}
					}
				}
			}
		},
		"/user/create": {
			"post": {
				"operationId": "createUser",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"newUser": [
							"RES",
							"SA",
							"SUB",
							"STF"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		},
		"/user/user-list": {
			"get": {
				"operationId": "getUserList",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IPaginatedResponse_GetUserDto_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetUserDto-Array_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"SA"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "isActive",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "direction",
						"required": true,
						"schema": {}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/user/profile": {
			"get": {
				"operationId": "getUserProfileById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetUserDetailsByIdDto_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"SA",
							"RES",
							"SUB",
							"STF"
						]
					}
				],
				"parameters": []
			},
			"put": {
				"operationId": "editUserProfileById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"SA",
							"RES",
							"SUB",
							"STF"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EditUserDetailsByIdDto"
							}
						}
					}
				}
			}
		},
		"/user/details": {
			"get": {
				"operationId": "getUserDetailsById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetUserDetailsByIdDto_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"SA"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "userGuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/activate": {
			"put": {
				"operationId": "activateUserById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"SA"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "userGuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/deactivate": {
			"put": {
				"operationId": "deactivateUserById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"SA"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "userGuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/sub-user/create": {
			"post": {
				"operationId": "createSubUserRequest",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"RES"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateSubUserRequestDto"
							}
						}
					}
				}
			}
		},
		"/user/sub-user/list": {
			"get": {
				"operationId": "getSubUserListByResident",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IPaginatedResponse_GetSubUserByResidentDto_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetUserDto-Array_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"RES"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/user/sub-user": {
			"put": {
				"operationId": "editSubUserStatusById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"RES"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "subUserGuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					}
				]
			},
			"delete": {
				"operationId": "deleteSubUserById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"RES"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DeleteSubUserByIdDto"
							}
						}
					}
				}
			}
		},
		"/ref-data/property": {
			"get": {
				"operationId": "getPropertyList",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetPropertyListDto-Array_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetPropertyListDto-Array_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Ref Data"
				],
				"security": [],
				"parameters": []
			}
		},
		"/parcel/create": {
			"post": {
				"operationId": "createParcel",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Parcel"
				],
				"security": [
					{
						"jwt": [
							"STF"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateParcelDto"
							}
						}
					}
				}
			}
		},
		"/notice/create": {
			"post": {
				"operationId": "createNotice",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Notice"
				],
				"security": [
					{
						"jwt": [
							"SA"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateNoticeDto"
							}
						}
					}
				}
			}
		},
		"/notice/admin": {
			"get": {
				"operationId": "getAllNotice",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IPaginatedResponse_GetNoticeDto_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetNoticeDto-Array_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Notice"
				],
				"security": [
					{
						"jwt": [
							"SA"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "direction",
						"required": true,
						"schema": {}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/notice": {
			"get": {
				"operationId": "getNotice",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IPaginatedResponse_GetNoticeDto_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetNoticeDto-Array_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Notice"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/notice/detail": {
			"get": {
				"operationId": "getNoticeById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetNoticeDto_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetNoticeDto_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Notice"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "noticeGuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/notice/edit": {
			"put": {
				"operationId": "editNoticeById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Notice"
				],
				"security": [
					{
						"jwt": [
							"SA"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EditNoticeDto"
							}
						}
					}
				}
			}
		},
		"/notice/delete": {
			"delete": {
				"operationId": "deleteNoticeById",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Notice"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DeleteNoticeDto"
							}
						}
					}
				}
			}
		},
		"/facility/create": {
			"post": {
				"operationId": "createFacilityBooking",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Facility"
				],
				"security": [
					{
						"jwt": [
							"RES",
							"SUB",
							"SA"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateFacilityBookingDto"
							}
						}
					}
				}
			}
		},
		"/facility": {
			"get": {
				"operationId": "getFacilityBooking",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IPaginatedResponse_GetFacilityBookingHistoryDto_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetFacilityBookingHistoryDto-Array_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Facility"
				],
				"security": [
					{
						"jwt": [
							"RES",
							"SA",
							"SUB"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "isPast",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/facility/admin": {
			"get": {
				"operationId": "getAllFacilityBooking",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IPaginatedResponse_GetFacilityBookingHistoryDto_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_GetFacilityBookingHistoryDto-Array_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Facility"
				],
				"security": [
					{
						"jwt": [
							"SA"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "direction",
						"required": true,
						"schema": {}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/facility/cancel": {
			"put": {
				"operationId": "cancelFacilityBooking",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Facility"
				],
				"security": [
					{
						"jwt": [
							"SA",
							"RES",
							"SUB"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CancelFacilityBookingDto"
							}
						}
					}
				}
			}
		},
		"/facility/available-slot/check": {
			"get": {
				"operationId": "cancelFacilityBooking",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_SpaceAvailabilityDto-Array_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Facility"
				],
				"security": [
					{
						"jwt": [
							"SA",
							"RES",
							"SUB"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "facilityId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "startDate",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endDate",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/face-auth/user/upload": {
			"post": {
				"operationId": "uploadUserFaceAuth",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"FaceAuth"
				],
				"security": [
					{
						"jwt": [
							"RES",
							"SA"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserFaceAuthDto"
							}
						}
					}
				}
			}
		},
		"/face-auth/user/update": {
			"put": {
				"operationId": "updateUserFaceAuth",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"FaceAuth"
				],
				"security": [
					{
						"jwt": [
							"RES",
							"SA"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserFaceAuthDto"
							}
						}
					}
				}
			}
		},
		"/auth/sign-up": {
			"post": {
				"operationId": "registerUser",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "role",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/RoleEnum"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegisterUserDto"
							}
						}
					}
				}
			}
		},
		"/auth/log-in": {
			"post": {
				"operationId": "login",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginDto"
							}
						}
					}
				}
			}
		},
		"/auth/reset-password/request": {
			"post": {
				"operationId": "Forgot Password",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RequestResetPasswordDto"
							}
						}
					}
				}
			}
		},
		"/auth/reset-password": {
			"post": {
				"operationId": "Reset Password",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [
					{
						"jwt": [
							"RES",
							"SA",
							"STF",
							"SUB"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ResetPasswordDto"
							}
						}
					}
				}
			}
		},
		"/auth/check-auth": {
			"get": {
				"operationId": "checkAuth",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_AuthTokenPayloadDto_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_AuthTokenPayloadDto_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [
					{
						"jwt": [
							"RES",
							"SA",
							"STF",
							"SUB"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "check",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/auth/check-auth/sub-user": {
			"get": {
				"operationId": "checkSubUserAuth",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_SubUserAuthTokenPayloadDto_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [
					{
						"subUserAuth": []
					}
				],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:3000/"
		}
	]
}